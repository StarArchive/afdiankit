"""DO NOT EDIT THIS FILE!

This file is automatically @generated by afdiankit using the follow command:

    python -m codegen && isort . && black .
"""


from typing import TYPE_CHECKING, Dict, Literal, Optional, overload

if TYPE_CHECKING:
    from afdiankit import AfdianCore
    from afdiankit.response import Response


class UserClient:
    def __init__(self, afdian: "AfdianCore"):
        self._afdian = afdian

    def get_user_profile(
        self,
    ):
        url = "/api/user/get-profile"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_profile(
        self,
    ):
        url = "/api/user/get-profile"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_user_profile_by_slug(
        self,
    ):
        url = "/api/user/get-profile-by-slug"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_profile_by_slug(
        self,
    ):
        url = "/api/user/get-profile-by-slug"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_user_sponsoring(
        self,
    ):
        url = "/api/user/get-sponsoring"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_sponsoring(
        self,
    ):
        url = "/api/user/get-sponsoring"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_user_sponsor_info(
        self,
    ):
        url = "/api/user/sponsor-info"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_sponsor_info(
        self,
    ):
        url = "/api/user/sponsor-info"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_get_album_info(
        self,
    ):
        url = "/api/user/get-album-info"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_album_info(
        self,
    ):
        url = "/api/user/get-album-info"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_get_album_list(
        self,
    ):
        url = "/api/user/get-album-list"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_album_list(
        self,
    ):
        url = "/api/user/get-album-list"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_get_album_post(
        self,
    ):
        url = "/api/user/get-album-post"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_album_post(
        self,
    ):
        url = "/api/user/get-album-post"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_get_album_catalog(
        self,
    ):
        url = "/api/user/get-album-catalog"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_album_catalog(
        self,
    ):
        url = "/api/user/get-album-catalog"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_user_get_group(
        self,
    ):
        url = "/api/user/get-group"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_get_group(
        self,
    ):
        url = "/api/user/get-group"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_user_get_group_feed(
        self,
    ):
        url = "/api/user/get-group-feed"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_get_group_feed(
        self,
    ):
        url = "/api/user/get-group-feed"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_user_get_group_list(
        self,
    ):
        url = "/api/user/get-group-list"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_get_group_list(
        self,
    ):
        url = "/api/user/get-group-list"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_user_join_group(
        self,
    ):
        url = "/api/user/join-group"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_get_user_join_group(
        self,
    ):
        url = "/api/user/join-group"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_user_redeem_info(
        self,
    ):
        url = "/api/user/redeem-info"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_redeem_info(
        self,
    ):
        url = "/api/user/redeem-info"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_user_use_redeem(
        self,
    ):
        url = "/api/user/use-redeem"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_use_redeem(
        self,
    ):
        url = "/api/user/use-redeem"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_user_mark(
        self,
    ):
        url = "/api/user/mark"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_mark(
        self,
    ):
        url = "/api/user/mark"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_user_unmark(
        self,
    ):
        url = "/api/user/unmark"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_unmark(
        self,
    ):
        url = "/api/user/unmark"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_user_quit_group(
        self,
    ):
        url = "/api/user/quit-group"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_quit_group(
        self,
    ):
        url = "/api/user/quit-group"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_api_user_black(
        self,
    ):
        url = "/api/user/black"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_api_user_black(
        self,
    ):
        url = "/api/user/black"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_api_user_unblack(
        self,
    ):
        url = "/api/user/unblack"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_api_user_unblack(
        self,
    ):
        url = "/api/user/unblack"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_user_show_sponsoring(
        self,
    ):
        url = "/api/user/show-sponsoring"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_show_sponsoring(
        self,
    ):
        url = "/api/user/show-sponsoring"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_user_mark_post(
        self,
    ):
        url = "/api/user/mark-post"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_mark_post(
        self,
    ):
        url = "/api/user/mark-post"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_user_unmark_post(
        self,
    ):
        url = "/api/user/unmark-post"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_unmark_post(
        self,
    ):
        url = "/api/user/unmark-post"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_user_idcard(
        self,
    ):
        url = "/api/user/idcard"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_idcard(
        self,
    ):
        url = "/api/user/idcard"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_user_idcard_validate(
        self,
    ):
        url = "/api/user/idcard-validate"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_idcard_validate(
        self,
    ):
        url = "/api/user/idcard-validate"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_user_edit_idcard(
        self,
    ):
        url = "/api/user/edit-idcard"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_user_edit_idcard(
        self,
    ):
        url = "/api/user/edit-idcard"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_user_delete_idcard(
        self,
    ):
        url = "/api/user/delete-idcard"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_user_delete_idcard(
        self,
    ):
        url = "/api/user/delete-idcard"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_all_idcards(
        self,
    ):
        url = "/api/user/all-idcards"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_all_idcards(
        self,
    ):
        url = "/api/user/all-idcards"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_report_prepare(
        self,
    ):
        url = "/api/user/report-prepare"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_report_prepare(
        self,
    ):
        url = "/api/user/report-prepare"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_report(
        self,
    ):
        url = "/api/user/report"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_report(
        self,
    ):
        url = "/api/user/report"

        return await self._afdian.arequest(
            "POST",
            url,
        )
