"""DO NOT EDIT THIS FILE!

This file is automatically @generated by afdiankit using the follow command:

    python -m codegen && isort . && black .
"""


from typing import TYPE_CHECKING, Dict, Literal, Optional, overload

if TYPE_CHECKING:
    from afdiankit import AfdianCore
    from afdiankit.response import Response


class CreatorClient:
    def __init__(self, afdian: "AfdianCore"):
        self._afdian = afdian

    def post_edit_basic(
        self,
    ):
        url = "/api/creator/edit-basic"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_edit_basic(
        self,
    ):
        url = "/api/creator/edit-basic"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_edit_plan(
        self,
    ):
        url = "/api/creator/edit-plan"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_edit_plan(
        self,
    ):
        url = "/api/creator/edit-plan"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_del_plan(
        self,
    ):
        url = "/api/creator/delete-plan"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_del_plan(
        self,
    ):
        url = "/api/creator/delete-plan"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_edit_withdraw(
        self,
    ):
        url = "/api/creator/edit-withdraw"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_edit_withdraw(
        self,
    ):
        url = "/api/creator/edit-withdraw"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_all_plans(
        self,
    ):
        url = "/api/creator/all-plans"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_all_plans(
        self,
    ):
        url = "/api/creator/all-plans"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_withdraw_method(
        self,
    ):
        url = "/api/creator/withdraw-method"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_withdraw_method(
        self,
    ):
        url = "/api/creator/withdraw-method"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_plans(
        self,
    ):
        url = "/api/creator/get-plans"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_plans(
        self,
    ):
        url = "/api/creator/get-plans"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_list(
        self,
    ):
        url = "/api/creator/list"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_list(
        self,
    ):
        url = "/api/creator/list"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_creator_rem_album_post(
        self,
    ):
        url = "/api/creator/rem-album-post"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_rem_album_post(
        self,
    ):
        url = "/api/creator/rem-album-post"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_custom_plan_switch(
        self,
    ):
        url = "/api/creator/custom-plan-switch"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_custom_plan_switch(
        self,
    ):
        url = "/api/creator/custom-plan-switch"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_hide_plan(
        self,
    ):
        url = "/api/creator/hide-plan"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_hide_plan(
        self,
    ):
        url = "/api/creator/hide-plan"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_show_plan(
        self,
    ):
        url = "/api/creator/show-plan"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_show_plan(
        self,
    ):
        url = "/api/creator/show-plan"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_creator_get_top_sponsors(
        self,
    ):
        url = "/api/creator/get-top-sponsors"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_top_sponsors(
        self,
    ):
        url = "/api/creator/get-top-sponsors"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_get_sponsors(
        self,
    ):
        url = "/api/creator/get-sponsors"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_sponsors(
        self,
    ):
        url = "/api/creator/get-sponsors"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_get_thank_sponsors(
        self,
    ):
        url = "/api/creator/get-thank-sponsors"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_thank_sponsors(
        self,
    ):
        url = "/api/creator/get-thank-sponsors"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_get_thank_word(
        self,
    ):
        url = "/api/creator/get-thank-word"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_thank_word(
        self,
    ):
        url = "/api/creator/get-thank-word"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_creator_edit_thank_word(
        self,
    ):
        url = "/api/creator/edit-thank-word"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_edit_thank_word(
        self,
    ):
        url = "/api/creator/edit-thank-word"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_all_goals(
        self,
    ):
        url = "/api/creator/all-goals"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_all_goals(
        self,
    ):
        url = "/api/creator/all-goals"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_goals(
        self,
    ):
        url = "/api/creator/get-goals"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_goals(
        self,
    ):
        url = "/api/creator/get-goals"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_edit_goal(
        self,
    ):
        url = "/api/creator/edit-goal"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_edit_goal(
        self,
    ):
        url = "/api/creator/edit-goal"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_del_goal(
        self,
    ):
        url = "/api/creator/delete-goal"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_del_goal(
        self,
    ):
        url = "/api/creator/delete-goal"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_hide_goal(
        self,
    ):
        url = "/api/creator/hide-goal"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_hide_goal(
        self,
    ):
        url = "/api/creator/hide-goal"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_show_goal(
        self,
    ):
        url = "/api/creator/show-goal"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_show_goal(
        self,
    ):
        url = "/api/creator/show-goal"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_discount_option(
        self,
    ):
        url = "/api/creator/discount-option"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_discount_option(
        self,
    ):
        url = "/api/creator/discount-option"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_show_guide(
        self,
    ):
        url = "/api/creator/show-guide"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_show_guide(
        self,
    ):
        url = "/api/creator/show-guide"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_privacy_public_income(
        self,
    ):
        url = "/api/creator/privacy-public-income"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_privacy_public_income(
        self,
    ):
        url = "/api/creator/privacy-public-income"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_privacy_public_sponsor(
        self,
    ):
        url = "/api/creator/privacy-public-sponsor"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_privacy_public_sponsor(
        self,
    ):
        url = "/api/creator/privacy-public-sponsor"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_edit_album(
        self,
    ):
        url = "/api/creator/edit-album"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_edit_album(
        self,
    ):
        url = "/api/creator/edit-album"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_edit_album_post(
        self,
    ):
        url = "/api/creator/edit-album-post"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_edit_album_post(
        self,
    ):
        url = "/api/creator/edit-album-post"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_update_album_post_order_by(
        self,
    ):
        url = " /api/creator/update-album-post-order-by"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_update_album_post_order_by(
        self,
    ):
        url = " /api/creator/update-album-post-order-by"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_creator_get_album_post_ids(
        self,
    ):
        url = " /api/creator/get-album-post-ids"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_album_post_ids(
        self,
    ):
        url = " /api/creator/get-album-post-ids"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_del_album(
        self,
    ):
        url = "/api/creator/del-album"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_get_creator_del_album(
        self,
    ):
        url = "/api/creator/del-album"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_show_album(
        self,
    ):
        url = "/api/creator/show-album"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_show_album(
        self,
    ):
        url = "/api/creator/show-album"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_show_shop(
        self,
    ):
        url = "/api/creator/show-shop"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_show_shop(
        self,
    ):
        url = "/api/creator/show-shop"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_set_show_sponsor(
        self,
    ):
        url = "/api/creator/set-show-sponsor"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_set_show_sponsor(
        self,
    ):
        url = "/api/creator/set-show-sponsor"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_creator_edit_group(
        self,
    ):
        url = "/api/creator/edit-group"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_get_creator_edit_group(
        self,
    ):
        url = "/api/creator/edit-group"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_group_selected_plans(
        self,
    ):
        url = "/api/creator/get-group-selected-plans"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_group_selected_plans(
        self,
    ):
        url = "/api/creator/get-group-selected-plans"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_get_group_status(
        self,
    ):
        url = "/api/creator/get-group-status"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_get_group_status(
        self,
    ):
        url = "/api/creator/get-group-status"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_creator_open_group_switch(
        self,
    ):
        url = "/api/creator/open-group-switch"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_open_group_switch(
        self,
    ):
        url = "/api/creator/open-group-switch"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_make_redeem(
        self,
    ):
        url = "/api/creator/make-redeem"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_make_redeem(
        self,
    ):
        url = "/api/creator/make-redeem"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_creator_redeem_history(
        self,
    ):
        url = "/api/creator/redeem-history"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_redeem_history(
        self,
    ):
        url = "/api/creator/redeem-history"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_set_can_buy_hide(
        self,
    ):
        url = "/api/creator/set-can-buy-hide"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_set_can_buy_hide(
        self,
    ):
        url = "/api/creator/set-can-buy-hide"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_get_plan_skus(
        self,
    ):
        url = "/api/creator/get-plan-skus"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_post_get_plan_skus(
        self,
    ):
        url = "/api/creator/get-plan-skus"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_creator_check_certification(
        self,
    ):
        url = "/api/creator/check-certification"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_check_certification(
        self,
    ):
        url = "/api/creator/check-certification"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_creator_submit_certification(
        self,
    ):
        url = "/api/creator/submit-certification"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_submit_certification(
        self,
    ):
        url = "/api/creator/submit-certification"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_copy_text(
        self,
    ):
        url = "/api/creator/copy-text"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_copy_text(
        self,
    ):
        url = "/api/creator/copy-text"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_copy_pic(
        self,
    ):
        url = "/api/creator/copy-pic"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_copy_pic(
        self,
    ):
        url = "/api/creator/copy-pic"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_list_open_tokens(
        self,
    ):
        url = "/api/creator/list-open-tokens"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_post_creator_list_open_tokens(
        self,
    ):
        url = "/api/creator/list-open-tokens"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_creator_create_open_token(
        self,
    ):
        url = "/api/creator/create-open-token"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_create_open_token(
        self,
    ):
        url = "/api/creator/create-open-token"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_creator_list_open_webhook(
        self,
    ):
        url = "/api/creator/list-open-webhook"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_creator_list_open_webhook(
        self,
    ):
        url = "/api/creator/list-open-webhook"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_creator_update_open_webhook(
        self,
    ):
        url = "/api/creator/update-open-webhook"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_update_open_webhook(
        self,
    ):
        url = "/api/creator/update-open-webhook"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_creator_test_open_webhook(
        self,
    ):
        url = "/api/creator/test-open-webhook"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_creator_test_open_webhook(
        self,
    ):
        url = "/api/creator/test-open-webhook"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_products(
        self,
    ):
        url = "/api/creator/get-products"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_products(
        self,
    ):
        url = "/api/creator/get-products"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_sku(
        self,
    ):
        url = "/api/creator/get-sku"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_sku(
        self,
    ):
        url = "/api/creator/get-sku"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def post_goal_setting_sponsor(
        self,
    ):
        url = "/api/creator/goal-setting-sponsor"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_goal_setting_sponsor(
        self,
    ):
        url = "/api/creator/goal-setting-sponsor"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_goal_setting_product(
        self,
    ):
        url = "/api/creator/goal-setting-product"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_goal_setting_product(
        self,
    ):
        url = "/api/creator/goal-setting-product"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_show_product_count_set(
        self,
    ):
        url = "/api/creator/show-product-count-set"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_show_product_count_set(
        self,
    ):
        url = "/api/creator/show-product-count-set"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_api_creator_search(
        self,
    ):
        url = "/api/creator/search"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_api_creator_search(
        self,
    ):
        url = "/api/creator/search"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_change_default_withdraw_method(
        self,
    ):
        url = "/api/creator/change-default-withdraw-method"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_change_default_withdraw_method(
        self,
    ):
        url = "/api/creator/change-default-withdraw-method"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_edit_plan_rank(
        self,
    ):
        url = "/api/creator/edit-plan-rank"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_edit_plan_rank(
        self,
    ):
        url = "/api/creator/edit-plan-rank"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_add_team_member(
        self,
    ):
        url = "/api/creator/add-team-member"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_add_team_member(
        self,
    ):
        url = "/api/creator/add-team-member"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_delete_team_member(
        self,
    ):
        url = "/api/creator/delete-team-member"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_delete_team_member(
        self,
    ):
        url = "/api/creator/delete-team-member"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def post_edit_team_member(
        self,
    ):
        url = "/api/creator/edit-team-member"

        return self._afdian.request(
            "POST",
            url,
        )

    async def async_post_edit_team_member(
        self,
    ):
        url = "/api/creator/edit-team-member"

        return await self._afdian.arequest(
            "POST",
            url,
        )

    def get_team_members(
        self,
    ):
        url = "/api/creator/get-team-members"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_team_members(
        self,
    ):
        url = "/api/creator/get-team-members"

        return await self._afdian.arequest(
            "GET",
            url,
        )

    def get_team_member_info(
        self,
    ):
        url = "/api/creator/get-team-member-info"

        return self._afdian.request(
            "GET",
            url,
        )

    async def async_get_team_member_info(
        self,
    ):
        url = "/api/creator/get-team-member-info"

        return await self._afdian.arequest(
            "GET",
            url,
        )
